#ifndef __SPEED_ENCODER_H
#define __SPEED_ENCODER_H

#include "stm32f1xx_hal.h"
#include "tim.h"  // ?????????

/* ?????(???????) */
#define SPEED_ENCODER_NUM    2

/* ??????(????????) */
#define SPEED_COEFF          50.0f

/* ??????? */
typedef enum {
    ENCODER_STATE_IDLE,       // ????
    ENCODER_STATE_CAL_SPEED   // ???????
} Encoder_StateTypeDef;

/* ???????? */
typedef struct {
    TIM_HandleTypeDef* timer;  // ????????
    int32_t counter;           // ??????(????)
    float speed;               // ???????(??:????????)
} Speed_Encoder_t;

/* ??????(???????) */
extern __IO Encoder_StateTypeDef g_speed_encoder_state;
extern __IO Speed_Encoder_t g_speed_encoder[SPEED_ENCODER_NUM];

/* ???? */
void Speed_Encoder_Init(void);       // ??????
void Speed_Encoder_Update(void);     // ????????
void Speed_Calculate(void);          // ????
void Speed_Process(void);            // ???????

#endif /* __SPEED_ENCODER_H */